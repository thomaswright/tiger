// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function Project$Todo(props) {
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsx("div", {
                    children: props.todo.text
                  })
            });
}

var Todo = {
  make: Project$Todo
};

function Project(props) {
  var updateProject = props.updateProject;
  var setShowArchive = props.setShowArchive;
  var showArchive = props.showArchive;
  var todos = props.todos;
  var project = props.project;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("div", {
                              children: project.name
                            }),
                        JsxRuntime.jsx("button", {
                              children: project.isActive ? "Active" : "Not Active",
                              className: "rounded bg-slate-200 w-20 text-xs h-fit",
                              onClick: (function (param) {
                                  updateProject(project.id, (function (p) {
                                          return {
                                                  id: p.id,
                                                  name: p.name,
                                                  isActive: !p.isActive
                                                };
                                        }));
                                })
                            })
                      ],
                      className: "flex flex-row justify-between items-center bg-slate-300"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("div", {
                            children: todos.filter(function (todo) {
                                    return !Types.isArchiveStatus(todo.status);
                                  }).map(function (todo) {
                                  return JsxRuntime.jsx(Project$Todo, {
                                              todo: todo
                                            });
                                })
                          })
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("div", {
                                      children: "Archive",
                                      className: "text-slate-500 text-xs"
                                    }),
                                JsxRuntime.jsx("button", {
                                      children: showArchive ? "^" : "v",
                                      className: "text-xs rounded h-3 w-10",
                                      onClick: (function (param) {
                                          setShowArchive(function (v) {
                                                if (v.includes(project.id)) {
                                                  return v.filter(function (el) {
                                                              return el !== project.id;
                                                            });
                                                } else {
                                                  return v.concat([project.id]);
                                                }
                                              });
                                        })
                                    })
                              ],
                              className: "flex flex-row justify-start items-center gap-2"
                            }),
                        showArchive ? JsxRuntime.jsx("div", {
                                children: todos.filter(function (todo) {
                                        return Types.isArchiveStatus(todo.status);
                                      }).map(function (todo) {
                                      return JsxRuntime.jsx(Project$Todo, {
                                                  todo: todo
                                                });
                                    })
                              }) : null
                      ]
                    })
              ],
              className: "border"
            });
}

var make = Project;

export {
  Todo ,
  make ,
}
/* react/jsx-runtime Not a pure module */
