// Generated by ReScript, PLEASE EDIT WITH CARE


function isArchiveStatus(s) {
  switch (s) {
    case "ArchiveDone" :
    case "ArchiveReject" :
    case "ArchiveNoNeed" :
    case "Trash" :
        return true;
    default:
      return false;
  }
}

function statusToFloat(s) {
  switch (s) {
    case "TodoUrgent" :
        return 0;
    case "TodoHigh" :
        return 1;
    case "TodoMedium" :
        return 2;
    case "TodoLow" :
        return 3;
    case "LaterWill" :
        return 4;
    case "LaterMaybe" :
        return 5;
    case "LaterUnlikely" :
        return 6;
    case "LaterUnsorted" :
        return 7;
    case "ResolveDone" :
        return 8;
    case "ResolveReject" :
        return 9;
    case "ResolveNoNeed" :
        return 10;
    case "ArchiveDone" :
        return 11;
    case "ArchiveReject" :
        return 12;
    case "ArchiveNoNeed" :
        return 13;
    case "Trash" :
        return 14;
    
  }
}

function statusString(s) {
  switch (s) {
    case "TodoUrgent" :
        return "Todo: Urgent";
    case "TodoHigh" :
        return "Todo: High";
    case "TodoMedium" :
        return "Todo: Medium";
    case "TodoLow" :
        return "Todo: Low";
    case "LaterWill" :
        return "Later: Will Do";
    case "LaterMaybe" :
        return "Later: Maybe";
    case "LaterUnlikely" :
        return "Later: Unlikely";
    case "LaterUnsorted" :
        return "Later: Unsorted";
    case "ResolveDone" :
        return "Resolve: Done";
    case "ResolveReject" :
        return "Resolve: Reject";
    case "ResolveNoNeed" :
        return "Resolve: No Need";
    case "ArchiveDone" :
        return "Archive: Done";
    case "ArchiveReject" :
        return "Archive: Reject";
    case "ArchiveNoNeed" :
        return "Archive: No Need";
    case "Trash" :
        return "Trash";
    
  }
}

function statusStringShort(s) {
  switch (s) {
    case "TodoUrgent" :
        return "!";
    case "TodoHigh" :
        return "1";
    case "TodoMedium" :
        return "2";
    case "TodoLow" :
        return "3";
    case "LaterWill" :
        return "A";
    case "LaterMaybe" :
        return "B";
    case "LaterUnlikely" :
        return "C";
    case "LaterUnsorted" :
        return "-";
    case "ResolveDone" :
    case "ArchiveDone" :
        return "âœ”ï¸Ž";
    case "ResolveReject" :
    case "ArchiveReject" :
        return "ðŸž«";
    case "ResolveNoNeed" :
    case "ArchiveNoNeed" :
        return "â—‹";
    case "Trash" :
        return "T";
    
  }
}

function statusColor(s) {
  switch (s) {
    case "TodoUrgent" :
        return "var(--todoU)";
    case "TodoHigh" :
        return "var(--todo1)";
    case "TodoMedium" :
        return "var(--todo2)";
    case "TodoLow" :
        return "var(--todo3)";
    case "LaterWill" :
    case "LaterMaybe" :
    case "LaterUnlikely" :
    case "LaterUnsorted" :
        return "var(--later)";
    case "ResolveDone" :
        return "var(--resolveDone)";
    case "ResolveReject" :
        return "var(--resolveReject)";
    case "ResolveNoNeed" :
        return "var(--resolveNoNeed)";
    case "ArchiveDone" :
        return "var(--archiveDone)";
    case "ArchiveReject" :
        return "var(--archiveReject)";
    case "ArchiveNoNeed" :
        return "var(--archiveNoNeed)";
    case "Trash" :
        return "var(--trash)";
    
  }
}

function getProjectId(s) {
  return "project-" + s;
}

function getTodoId(s) {
  return "todo-" + s;
}

function getTodoInputId(s) {
  return "todo-input-" + s;
}

var listItemClass = "class-list-item";

var todoInputClass = "class-list-todo-input";

export {
  isArchiveStatus ,
  statusToFloat ,
  statusString ,
  statusStringShort ,
  statusColor ,
  getProjectId ,
  getTodoId ,
  getTodoInputId ,
  listItemClass ,
  todoInputClass ,
}
/* No side effect */
