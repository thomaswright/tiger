// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as Common from "./Common.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Tb from "react-icons/tb";
import * as JsxRuntime from "react/jsx-runtime";

function DisplayProject(props) {
  var setTodos = props.setTodos;
  var setProjects = props.setProjects;
  var updateProject = props.updateProject;
  var project = props.project;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("input", {
                      className: [" flex-1 bg-inherit text-[--t10] w-full outline-none \n           border-none px-2 py-1  focus:text-blue-500"].join(" "),
                      id: "id-display-title",
                      placeholder: "Project Name",
                      type: "text",
                      value: project.name,
                      onChange: (function (e) {
                          updateProject(project.id, (function (p) {
                                  return {
                                          id: p.id,
                                          name: e.target.value,
                                          isActive: p.isActive
                                        };
                                }));
                        })
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("button", {
                              children: project.isActive ? "Active" : "Inactive",
                              className: "rounded bg-[var(--t2)] px-2 text-xs h-fit flex-none",
                              onClick: (function (param) {
                                  updateProject(project.id, (function (p) {
                                          return {
                                                  id: p.id,
                                                  name: p.name,
                                                  isActive: !p.isActive
                                                };
                                        }));
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              className: "flex-1"
                            }),
                        JsxRuntime.jsx("button", {
                              children: JsxRuntime.jsx(Tb.TbTrash, {}),
                              className: ["\n          text-[var(--t4)] px-1 h-6 flex flex-row items-center justify-center rounded border-[var(--t3)]\n          hover:text-blue-600\n        "].join(" "),
                              onClick: (function (param) {
                                  Core__Option.mapOr(Caml_option.nullable_to_opt(document.getElementById(Types.getProjectId(project.id))), undefined, (function (projectEl) {
                                          console.log(projectEl);
                                          Common.focusPreviousClass(Types.listItemClass, projectEl);
                                        }));
                                  setProjects(function (v) {
                                        return v.filter(function (p) {
                                                    return p.id !== project.id;
                                                  });
                                      });
                                  setTodos(function (v) {
                                        return v.filter(function (p) {
                                                    return p.project !== project.id;
                                                  });
                                      });
                                })
                            })
                      ],
                      className: "flex flex-row border-y items-center gap-3 p-1 px-2"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("button", {
                            children: "Archive All Resolved if not Pinned",
                            className: "rounded bg-[var(--t2)] px-2 text-xs h-fit flex-none",
                            onClick: (function (param) {
                                setTodos(function (todos) {
                                      return todos.map(function (t) {
                                                  if (t.project !== project.id || !(Types.statusIsResolved(t.status) && t.box !== "Pinned")) {
                                                    return t;
                                                  } else {
                                                    return {
                                                            id: t.id,
                                                            text: t.text,
                                                            project: t.project,
                                                            status: t.status,
                                                            box: "Archive",
                                                            parentTodo: t.parentTodo,
                                                            depth: t.depth,
                                                            childNumber: t.childNumber,
                                                            hasArchivedChildren: t.hasArchivedChildren
                                                          };
                                                  }
                                                });
                                    });
                              })
                          }),
                      className: "p-2"
                    })
              ]
            });
}

var make = DisplayProject;

export {
  make ,
}
/* Common Not a pure module */
