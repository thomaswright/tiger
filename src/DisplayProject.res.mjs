// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as React from "react";
import * as Common from "./Common.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Belt_MapString from "rescript/lib/es6/belt_MapString.js";
import * as Tb from "react-icons/tb";
import * as JsxRuntime from "react/jsx-runtime";
import CompareAsc from "date-fns/compareAsc";
import ReactTextareaAutosize from "react-textarea-autosize";

function DisplayProject(props) {
  var handleHide = props.handleHide;
  var setTodos = props.setTodos;
  var setProjects = props.setProjects;
  var updateProject = props.updateProject;
  var project = props.project;
  var handleHideArchived = function (param) {
    updateProject(project.id, (function (p) {
            return handleHide(false, undefined, p);
          }));
  };
  var match = React.useState(function () {
        return false;
      });
  var setStagedForDelete = match[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx(ReactTextareaAutosize, {
                            className: [" flex-1 text-lg bg-inherit text-[--t10] w-full outline-none font-black tracking-tight focus:ring-0\n           border-none px-0 py-0"].join(" "),
                            id: "id-display-title",
                            style: {
                              resize: "none"
                            },
                            placeholder: "Project",
                            value: project.name,
                            onChange: (function (e) {
                                updateProject(project.id, (function (p) {
                                        return {
                                                id: p.id,
                                                name: e.target.value,
                                                additionalText: p.additionalText,
                                                isActive: p.isActive,
                                                todos: p.todos,
                                                hideArchived: p.hideArchived,
                                                hideAll: p.hideAll,
                                                hiddenTodos: p.hiddenTodos
                                              };
                                      }));
                              })
                          }),
                      className: "w-full px-2 py-1"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        project.hideAll ? JsxRuntime.jsx("span", {
                                children: "All Hidden",
                                className: "text-xs "
                              }) : JsxRuntime.jsx("button", {
                                children: project.hideArchived ? JsxRuntime.jsx("span", {
                                        children: "Hiding Archived"
                                      }) : JsxRuntime.jsx("span", {
                                        children: "Showing Archived"
                                      }),
                                className: "rounded bg-[var(--t2)] px-2 text-xs h-fit flex-none flex flex-row justify-center items-center",
                                onClick: handleHideArchived
                              }),
                        JsxRuntime.jsx("button", {
                              children: "Sort by Date",
                              className: "rounded bg-[var(--t2)] px-2 text-xs h-fit flex-none",
                              onClick: (function (param) {
                                  updateProject(project.id, (function (p) {
                                          var projectAllHidden = handleHide(true, false, p);
                                          var orderedPerTodo_id = projectAllHidden.id;
                                          var orderedPerTodo_name = projectAllHidden.name;
                                          var orderedPerTodo_additionalText = projectAllHidden.additionalText;
                                          var orderedPerTodo_isActive = projectAllHidden.isActive;
                                          var orderedPerTodo_todos = projectAllHidden.todos;
                                          var orderedPerTodo_hideArchived = projectAllHidden.hideArchived;
                                          var orderedPerTodo_hideAll = projectAllHidden.hideAll;
                                          var orderedPerTodo_hiddenTodos = Belt_MapString.map(projectAllHidden.hiddenTodos, (function (todos) {
                                                  return todos.toSorted(function (a, b) {
                                                              var match = a.targetDate;
                                                              var match$1 = b.targetDate;
                                                              if (match !== undefined) {
                                                                if (match$1 !== undefined) {
                                                                  return CompareAsc(new Date(match), new Date(match$1));
                                                                } else {
                                                                  return -1;
                                                                }
                                                              } else if (match$1 !== undefined) {
                                                                return 1;
                                                              } else {
                                                                return 2;
                                                              }
                                                            });
                                                }));
                                          var orderedPerTodo = {
                                            id: orderedPerTodo_id,
                                            name: orderedPerTodo_name,
                                            additionalText: orderedPerTodo_additionalText,
                                            isActive: orderedPerTodo_isActive,
                                            todos: orderedPerTodo_todos,
                                            hideArchived: orderedPerTodo_hideArchived,
                                            hideAll: orderedPerTodo_hideAll,
                                            hiddenTodos: orderedPerTodo_hiddenTodos
                                          };
                                          return handleHide(true, true, orderedPerTodo);
                                        }));
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Sort by Status",
                              className: "rounded bg-[var(--t2)] px-2 text-xs h-fit flex-none",
                              onClick: (function (param) {
                                  updateProject(project.id, (function (p) {
                                          var projectAllHidden = handleHide(true, false, p);
                                          var orderedPerTodo_id = projectAllHidden.id;
                                          var orderedPerTodo_name = projectAllHidden.name;
                                          var orderedPerTodo_additionalText = projectAllHidden.additionalText;
                                          var orderedPerTodo_isActive = projectAllHidden.isActive;
                                          var orderedPerTodo_todos = projectAllHidden.todos;
                                          var orderedPerTodo_hideArchived = projectAllHidden.hideArchived;
                                          var orderedPerTodo_hideAll = projectAllHidden.hideAll;
                                          var orderedPerTodo_hiddenTodos = Belt_MapString.map(projectAllHidden.hiddenTodos, (function (todos) {
                                                  return todos.toSorted(function (a, b) {
                                                              return Types.statusToFloat(a.status) - Types.statusToFloat(b.status);
                                                            });
                                                }));
                                          var orderedPerTodo = {
                                            id: orderedPerTodo_id,
                                            name: orderedPerTodo_name,
                                            additionalText: orderedPerTodo_additionalText,
                                            isActive: orderedPerTodo_isActive,
                                            todos: orderedPerTodo_todos,
                                            hideArchived: orderedPerTodo_hideArchived,
                                            hideAll: orderedPerTodo_hideAll,
                                            hiddenTodos: orderedPerTodo_hiddenTodos
                                          };
                                          return handleHide(true, true, orderedPerTodo);
                                        }));
                                })
                            }),
                        match[0] ? JsxRuntime.jsxs("span", {
                                children: [
                                  JsxRuntime.jsx("button", {
                                        children: "Cancel",
                                        className: "rounded bg-[var(--t8)] text-[var(--t2)] px-2 font-medium  text-xs h-fit flex-none mr-2 ",
                                        onClick: (function (param) {
                                            setStagedForDelete(function (param) {
                                                  return false;
                                                });
                                          })
                                      }),
                                  JsxRuntime.jsx("button", {
                                        children: "Delete Project",
                                        className: "rounded bg-red-100 text-red-600 font-medium px-2 text-xs h-fit flex-none",
                                        onClick: (function (param) {
                                            Core__Option.mapOr(Caml_option.nullable_to_opt(document.getElementById(Types.getProjectId(project.id))), undefined, (function (projectEl) {
                                                    Common.focusPreviousClass(Types.listItemClass, projectEl);
                                                  }));
                                            setProjects(function (v) {
                                                  return v.filter(function (p) {
                                                              return p.id !== project.id;
                                                            });
                                                });
                                            setTodos(project.id, (function (v) {
                                                    return v.filter(function (p) {
                                                                return p.project !== project.id;
                                                              });
                                                  }));
                                          })
                                      })
                                ]
                              }) : JsxRuntime.jsx("button", {
                                children: JsxRuntime.jsx(Tb.TbTrash, {}),
                                className: ["\n          text-[var(--t4)] px-1 h-6 flex flex-row items-center justify-center rounded border-[var(--t3)]\n          hover:text-red-600\n        "].join(" "),
                                onClick: (function (param) {
                                    setStagedForDelete(function (param) {
                                          return true;
                                        });
                                  })
                              })
                      ],
                      className: "flex flex-row flex-wrap border-y border-[var(--t3)] items-center gap-3 p-1 px-2"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx(ReactTextareaAutosize, {
                            className: ["placeholder:text-[var(--t4)] text-sm flex-1 border-none rounded-lg text-[var(--t10)] w-full outline-none bg-[var(--t1)]\n          focus:ring-0 font-medium"].join(" "),
                            id: "id-display-title",
                            style: {
                              resize: "none"
                            },
                            placeholder: "Additional Project Details",
                            value: project.additionalText,
                            onChange: (function (e) {
                                updateProject(project.id, (function (t) {
                                        return {
                                                id: t.id,
                                                name: t.name,
                                                additionalText: e.target.value,
                                                isActive: t.isActive,
                                                todos: t.todos,
                                                hideArchived: t.hideArchived,
                                                hideAll: t.hideAll,
                                                hiddenTodos: t.hiddenTodos
                                              };
                                      }));
                              })
                          }),
                      className: "p-1"
                    })
              ]
            });
}

var make = DisplayProject;

export {
  make ,
}
/* react Not a pure module */
