// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as Common from "./Common.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function DisplayProject(props) {
  var setTodos = props.setTodos;
  var setProjects = props.setProjects;
  var updateProject = props.updateProject;
  var project = props.project;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("input", {
                      className: [" flex-1 bg-inherit text-[--t10] w-full outline-none \n          leading-none padding-none border-none h-5 -my-1 focus:text-blue-500"].join(" "),
                      id: "id-display-title",
                      placeholder: "Project Name",
                      type: "text",
                      value: project.name,
                      onChange: (function (e) {
                          updateProject(project.id, (function (p) {
                                  return {
                                          id: p.id,
                                          name: e.target.value,
                                          isActive: p.isActive
                                        };
                                }));
                        })
                    }),
                JsxRuntime.jsx("button", {
                      children: "Delete Project",
                      className: ["bg-[var(--t2)] px-2 rounded"].join(" "),
                      onClick: (function (param) {
                          Core__Option.mapOr(Caml_option.nullable_to_opt(document.getElementById(Types.getProjectId(project.id))), undefined, (function (projectEl) {
                                  console.log(projectEl);
                                  Common.focusPreviousClass(Types.listItemClass, projectEl);
                                }));
                          setProjects(function (v) {
                                return v.filter(function (p) {
                                            return p.id !== project.id;
                                          });
                              });
                          setTodos(function (v) {
                                return v.filter(function (p) {
                                            return p.project !== project.id;
                                          });
                              });
                        })
                    }),
                JsxRuntime.jsx("button", {
                      children: project.isActive ? "Active" : "Not Active",
                      className: "rounded bg-[var(--t2)] px-1 text-xs h-fit flex-none",
                      onClick: (function (param) {
                          updateProject(project.id, (function (p) {
                                  return {
                                          id: p.id,
                                          name: p.name,
                                          isActive: !p.isActive
                                        };
                                }));
                        })
                    })
              ]
            });
}

var make = DisplayProject;

export {
  make ,
}
/* Common Not a pure module */
