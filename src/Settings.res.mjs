// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Theme from "./Theme.res.mjs";
import * as Common from "./Common.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function Settings(props) {
  var setBaseColor = props.setBaseColor;
  var onExportJson = props.onExportJson;
  var match = Theme.useTheme();
  var setTheme = match[1];
  var theme = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("img", {
                              className: "py-0.5 ",
                              src: Common.logoUrl,
                              width: "40"
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Tiger Todo",
                              className: "font-black text-5xl tracking-tighter"
                            })
                      ],
                      className: "flex flex-row gap-3 ml-0.5"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("div", {
                              children: "Tiger is a todo app with one special feature: it is designed exclusively for my girlfriend.\n            You can use it too if you like it.\n            ",
                              className: " mb-4 mt-2"
                            }),
                        JsxRuntime.jsx("div", {
                              children: "Here are the features:",
                              className: "mb-2"
                            }),
                        JsxRuntime.jsxs("ul", {
                              children: [
                                JsxRuntime.jsx("li", {
                                      children: "By design it has only one page. There are no \"views\"."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Todos are grouped by project."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Meaningful statuses"
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Make sub-todos by indenting with tab or cmd + ] deindent with shift + tab or cmd + [."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Drag by the drag handle to reorder. Click the clickbox to drag multiple."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Click the clickbox to change the status of multiple."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Navigate with arrow keys. Hit enter to change the text. Escape to go back to nav mode. \"s\" opens the status picker."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Hit enter from in a todo to make a new todo or click the plus on the project."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Delete a todo by either deleting all text and then hitting Backspace twice, hitting cmd + Backspace, or click the trash icon on the details panel."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Add a date."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Add additional details per todo."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Order by date or status in the project details. Can also hide archived todos here."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Collapse all projects."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "The todos are stored locally, not in the cloud. The import will override all data."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "It has light and dark mode and multiple color options for each. It is cute when you want to be cute and serious when you need to be serious."
                                    })
                              ],
                              className: "list-disc ml-4"
                            })
                      ],
                      className: "font-normal text-sm"
                    }),
                JsxRuntime.jsx("div", {
                      children: "Settings",
                      className: "font-black text-lg"
                    }),
                JsxRuntime.jsx("div", {
                      children: "Backup",
                      className: "font-bold text-sm"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("button", {
                              children: "Export",
                              className: ["bg-[var(--t2)] px-2 rounded text-sm flex flex-row items-center gap-1 h-5 "].join(" "),
                              onClick: (function (param) {
                                  onExportJson();
                                })
                            }),
                        JsxRuntime.jsx(Common.ImportButton.make, {
                              onImportJson: props.onImportJson
                            })
                      ],
                      className: "flex flex-row gap-2"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("div", {
                              children: "Color",
                              className: "font-bold text-sm"
                            }),
                        JsxRuntime.jsx("div", {
                              children: [
                                  "var(--redBase)",
                                  "var(--orangeBase)",
                                  "var(--yellowBase)",
                                  "var(--greenBase)",
                                  "var(--tealBase)",
                                  "var(--blueBase)",
                                  "var(--purpleBase)",
                                  "var(--pinkBase)"
                                ].map(function (v) {
                                    return JsxRuntime.jsx("button", {
                                                className: "h-6 w-6 rounded-full",
                                                style: {
                                                  backgroundColor: theme === "dark" ? "oklch(from " + v + " 0.4 0.2 h)" : "oklch(from " + v + " 0.8 0.2 h)"
                                                },
                                                onClick: (function (param) {
                                                    setBaseColor(function (param) {
                                                          return v;
                                                        });
                                                  })
                                              });
                                  }),
                              className: "flex flex-row gap-2 py-1"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("button", {
                                      children: "Dark Mode",
                                      className: "text-sm px-2 bg-[var(--t2)] rounded",
                                      onClick: (function (param) {
                                          setTheme(function (param) {
                                                return "dark";
                                              });
                                        })
                                    }),
                                JsxRuntime.jsx("button", {
                                      children: "Light Mode",
                                      className: "text-sm px-2 bg-[var(--t2)] rounded",
                                      onClick: (function (param) {
                                          setTheme(function (param) {
                                                return "light";
                                              });
                                        })
                                    })
                              ],
                              className: "flex flex-row gap-2 py-2"
                            })
                      ],
                      className: "pt-2"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        "Made by ",
                        JsxRuntime.jsx("a", {
                              children: "Thomas Wright",
                              style: {
                                color: theme === "dark" ? "oklch(from var(--tBase) 0.7 0.2 h)" : "oklch(from var(--tBase) 0.5 0.2 h)"
                              },
                              href: "https://github.com/thomaswright/tiger"
                            })
                      ],
                      className: "text-xs text-right w-full py-3 font-bold "
                    })
              ],
              className: "flex-1 overflow-y-scroll px-3 py-2 flex flex-col gap-2 items-start pb-2"
            });
}

var make = Settings;

export {
  make ,
}
/* Theme Not a pure module */
