// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Types from "./Types.res.mjs";
import * as React from "react";
import * as Common from "./Common.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Tb from "react-icons/tb";
import * as JsxRuntime from "react/jsx-runtime";

function DisplayTodo(props) {
  var setTodos = props.setTodos;
  var updateTodo = props.updateTodo;
  var setFocusIdNext = props.setFocusIdNext;
  var todo = props.todo;
  var match = React.useState(function () {
        return false;
      });
  var setStatusSelectIsOpen = match[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("input", {
                            className: [" flex-1 bg-inherit text-[--t10] w-full outline-none \n           border-none px-2 py-1  focus:text-blue-500"].join(" "),
                            id: "id-display-title",
                            placeholder: "Todo",
                            type: "text",
                            value: todo.text,
                            onKeyDown: (function (e) {
                                if (e.key === "Escape") {
                                  return setFocusIdNext(function (param) {
                                              return Types.getTodoId(todo.id);
                                            });
                                }
                                
                              }),
                            onChange: (function (e) {
                                updateTodo(todo.id, (function (t) {
                                        return {
                                                id: t.id,
                                                text: e.target.value,
                                                project: t.project,
                                                isDone: t.isDone,
                                                status: t.status,
                                                box: t.box
                                              };
                                      }));
                              })
                          })
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx(Common.StatusSelect.make, {
                              status: todo.status,
                              setStatus: (function (newStatus) {
                                  updateTodo(todo.id, (function (t) {
                                          return {
                                                  id: t.id,
                                                  text: t.text,
                                                  project: t.project,
                                                  isDone: t.isDone,
                                                  status: newStatus,
                                                  box: t.box === "Archive" && !Types.statusIsResolved(newStatus) ? "Working" : t.box
                                                };
                                        }));
                                }),
                              focusTodo: (function () {
                                  
                                }),
                              isOpen: match[0],
                              onOpenChange: (function (v) {
                                  setStatusSelectIsOpen(function (param) {
                                        return v;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("div", {
                              className: "flex-1"
                            }),
                        Types.statusIsResolved(todo.status) ? JsxRuntime.jsx("button", {
                                children: JsxRuntime.jsx(Tb.TbArchive, {}),
                                className: [
                                    " px-1 h-6 flex flex-row items-center justify-center rounded border-[var(--t3)] gap-1\n          hover:text-blue-600\n          ",
                                    todo.box === "Archive" ? "text-blue-600" : "text-[var(--t4)]"
                                  ].join(" "),
                                onClick: (function (param) {
                                    setTodos(function (v) {
                                          return v.map(function (t) {
                                                      if (t.id === todo.id) {
                                                        return {
                                                                id: t.id,
                                                                text: t.text,
                                                                project: t.project,
                                                                isDone: t.isDone,
                                                                status: Types.statusIsResolved(t.status) ? t.status : "ResolveScrap",
                                                                box: t.box !== "Archive" ? "Archive" : "Working"
                                                              };
                                                      } else {
                                                        return t;
                                                      }
                                                    });
                                        });
                                  })
                              }) : null,
                        JsxRuntime.jsx("button", {
                              children: JsxRuntime.jsx(Tb.TbPin, {}),
                              className: [
                                  " px-1 h-6 flex flex-row items-center justify-center rounded border-[var(--t3)]\n          hover:text-blue-600\n          ",
                                  todo.box === "Pinned" ? "text-blue-600" : "text-[var(--t4)]"
                                ].join(" "),
                              onClick: (function (param) {
                                  setTodos(function (v) {
                                        return v.map(function (t) {
                                                    if (t.id === todo.id) {
                                                      return {
                                                              id: t.id,
                                                              text: t.text,
                                                              project: t.project,
                                                              isDone: t.isDone,
                                                              status: t.status,
                                                              box: t.box !== "Pinned" ? "Pinned" : "Working"
                                                            };
                                                    } else {
                                                      return t;
                                                    }
                                                  });
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: JsxRuntime.jsx(Tb.TbTrash, {}),
                              className: ["\n          text-[var(--t4)] px-1 h-6 flex flex-row items-center justify-center rounded border-[var(--t3)]\n          hover:text-blue-600\n        "].join(" "),
                              onClick: (function (param) {
                                  Core__Option.mapOr(Caml_option.nullable_to_opt(document.getElementById(Types.getTodoId(todo.id))), undefined, (function (todoEl) {
                                          Common.focusPreviousClass(Types.listItemClass, todoEl);
                                        }));
                                  setTodos(function (v) {
                                        return v.filter(function (t) {
                                                    return t.id !== todo.id;
                                                  });
                                      });
                                })
                            })
                      ],
                      className: "flex flex-row border-y items-center gap-3 p-1 px-2"
                    })
              ]
            });
}

var make = DisplayTodo;

export {
  make ,
}
/* react Not a pure module */
